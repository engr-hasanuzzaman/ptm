AllCops:
  TargetRubyVersion: 2.4
  Exclude:
    # Autogenerated binstubs should not be subject to style guide.
    - "bin/**/*"
    - "vendor/ruby/**/*"
    - "tmp/**/*"
    - "ptm.gemspec"

# Certain folders do not class-level comments
Documentation:
  Exclude:
    - "spec/**/*"

Metrics/AbcSize:
  Exclude:
    - "ptm.gemspec"
Metrics/BlockLength:
  Enabled: false

Metrics/ClassLength:
  Max: 120
  Exclude:
    - "ptm.gemspec"
Metrics/LineLength:
  Max: 80
  Exclude:
      - "ptm.gemspec"

# The ABC metrics, like `AbcSize` are more useful than the line-counting
# metrics. There should be *some* upper limit on lines per-method, but the
# default, 10, is not practical.
Metrics/MethodLength:
  Max: 30
  Exclude:
    - "ptm.gemspec"
# The default ModuleLength (and ClassLength) of 100 is satisfactory for
# production code, but is not a useful number for tests, which are often
# longer than the code they test.
Metrics/ModuleLength:
  Exclude:
    - "test/**/*"
    - "ptm.gemspec"
# The fixed indentation style is rational. To align with the first parameters
# is arguably friendly, but makes for long lines and obscures control flow.
Style/AlignParameters:
  EnforcedStyle: with_fixed_indentation

# Both the leading and trailing styles can be argued for. RPL Team has
# chosen the trailing style.
Style/DotPosition:
  EnforcedStyle: trailing

# I prefer conditionals to mid-method `return` calls, which this cop encourages.
Style/GuardClause:
  Enabled: false

# The "modifier style" conditional (aka. trailing conditional) should only
# be used on *very* short lines, otherwise it is hard to see at a glance.
Style/IfUnlessModifier:
  MaxLineLength: 60

Style/MultilineMethodCallIndentation:
  EnforcedStyle: indented

Style/MultilineOperationIndentation:
  EnforcedStyle: indented

# This cop doesn't work correctly when snake_case variable names end in a number
Style/VariableNumber:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false
